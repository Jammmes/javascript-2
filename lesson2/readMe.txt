Что не получилось в этом ДЗ:
1.
Разделить функции получения данных из запроса и рендер DOM элементов.
Никак не получалось, т.к. несмотря на то, что функция получения и обработки данных выполнялась перед функцией рендера, но 
на момент выполнения рендера хранилище еще не успевало заполняться данными. Выходила ошибка. Много времени потратил, потом в
 чате ребята сказали что скорее всего один выход - рендерить сразу в этой же функции, в которой и получил данные из запроса. 
Так и сделал, но осадок остался) Если как то можно реализовать - научите пожалуйста.
2. 
Корректно подгружать данные по мере прокрутки страницы.
Проблема возникла в том, что я не смог добиться того, чтобы подгружались именно нужные данные.
Реализовал так: на событие window.onscroll "навесил" анонимную функцию, которая запускала
другую функцию - loadPokemons().
Примерно так
//******************************************
window.onscroll = function() {
        if (window.scrollY >= document.body.offsetHeight - window.innerHeight) {
            offset += 50;
            pokemons.loadPokemons();
        };
    }
*********************************************************//
Внутри функции loadPokemons() создавал
каждый раз новую переменную var xhr = new XMLHttpRequest();
Конфигурировал запрос, пытаясь получить нужную порцию данных через параметры URL
var url = this.url + '?limit=50' + '&offset=' + offset;
Для этого использовал переменную offset, всяко разно передавал ее внуть функции
и параметром, и глобальной переменной. 
//loadPokemons()
//**************************************************
10 var url = this.url + '?limit=50' + '&offset=' + offset;
20    xhr.open('GET', url, true);
30    xhr.timeout = 3000;
40    xhr.ontimeout = function() {
50        console.log('Время вышло');
60    }
70    xhr.send();
80    xhr.onreadystatechange = function() {
100        if (xhr.readyState === XMLHttpRequest.DONE) {
110            if (xhr.status === 200) {
120                var loadResults = JSON.parse(xhr.responseText);
//********************************************************************
Но почему-то при приближении к краю экрана функция window.onscroll срабатывала многократно, и соответсвенно многократно запускала loadPokemons()
При этом получалась такая ситуация:
внутри функции loadPokemons()
конфигурируется параметр url, с нужным мне значением offset, например=50
но потом код после строки 80, где xhr.onreadystatechange
срабатывает несколько раз, а параметры запроса, в т.ч. url, определенные выше не обновляются,
получается, что я получаю и обрабатываю несколько раз данные JSON с одним и тем же значением offset. 
Пришлось отказаться от идеи подгружать данные порциями. 
Подскажите пожалуйста - что я делал не правильно?



